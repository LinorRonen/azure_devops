trigger:
  - main  # Trigger pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Use the latest Ubuntu image for the build agent

steps:
  # Step 1: Checkout the repository (simplified)
  - checkout: self  # Ensures the repository is checked out with a shallow clone (only the latest commit)
    fetchDepth: 1   # Only fetch the latest commit

  # Step 2: Install .NET SDK 6.x
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.x'  # Use .NET 6.x SDK version
      installationPath: $(Agent.ToolsDirectory)/dotnet  # Path where the SDK is installed

  # Step 3: Build the project with the Release configuration
  - script: |
      dotnet build --configuration Release
    displayName: 'Build Project'  # Display name for the build task

  # Step 4: Publish the artifact to a directory
  - script: |
      dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)
    displayName: 'Publish Artifact'  # Display name for the publish task

  # Step 5: Publish build artifacts so they can be used for deployment or later stages
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)  # Path to the published artifact
      artifactName: 'drop'  # Artifact name for easy reference
      publishLocation: 'Container'  # This ensures the artifact is uploaded to Azure DevOps

  # Example of a script step with a null-safe condition (optional)
  - script: |
      echo "Running the pipeline"
    displayName: 'Run a Script'
    condition: eq(coalesce(variables['system.debugContext'], 'false'), 'true')  # Handle null value in system.debugContext
